current:
MOVED industry.csv FILE TO 'old' FOLDER. MOVE BACK TO 'campaing' to reactavate
questions:
create the list of wanted libarys:
    1) industry replacer (disabled for now) (reason: extra unacceptable lag)
        -to fix, minimize possible causes of lag, like for example, the number of data transfers, and the hundreds of if statements.
        -possibility: remove about 95% of functions. keep all descriptions, images, apply/unapply, core and improve functions, remove checking for current industry every time.
        -possability: remove ALL data transfer. have the code run the stored industry directly. when the industry changes, have a function that lets the new industry take whatever it wants from the old one. then i dont need to worry about things.
    2) condition replacer
        -replaces functions in market conditions with ones of my own.
        notes:
            hazard rating is stored in the '\data\campaign\procgen\condition_gen_data.csv'.
                -this looks very hard to do anything with....
                -market.getHazard().modifyFlat(id, hazard, condition.getName()); is how the market changes what the hazard is for said condition.
                -BaseHazardCondition class? is this the thing?
                IDEA:
                    3.a)(done) make a new class that hold a set of marketConditionReplacer classes.
                        -each class hold a ID, and the marketConditionID they are normally applied to
                        -each class holds 2 functions: 1 tells me what condition this new market condition represents. the other tells me weather or not this condition can be applyed to this market at this time.
                        -NOTE: this does not represent the market condition itself. this only determines if the market condition should change..
                    3.b)(done) make it so everytime a market is applied to, it looks at its market conditions, to determine if any of them should change, useing a priority system, then doing the base one..?
                        -i could put a system that stores what market conditions were orginaly on the world, and what ones are active now. having this stored will save a lot of processing time.
                            -ISSUE: unless i make it recalculate on every startup, i might fail to beagle to tell what market is one what thingy mabob?
                        -if i notice that one is gone, i will assume that the market condition should be gone -forever- and deleate it...
                    3.c) copy all base game market conditions. set one to be 'hidden' and have 0 hazzard. also store the generating plugin on that market condition.
                         set one to be 'shown'. it will look like the old market condition, and will hold its hazard rating onto itself. it will be the market condition that is the 'base' market condition.
                    3.d) setup a system in marketConditionReplacerSet were i can change what the 'base' market condition is. be default it will be ID, but it can be not ID instead...
                    -ISSUE:
                        1) there is a possability that a 'invisable' market condition of my own gets overriding by someone else.
                        2) in regards to market conditions hazzard rating and its display, wont it not be displayed right because of the constant changes?
                        3) issue regarding things that call market conditions, to like get data from them.
                            -the issue is the fact that some fucntions will try to cast market conditions over to a certen type of market condition. this causes issues.
                            -were? how? simple: the market condition is cast to say (marketCondtionTypeA)genaricMarketCondition, but because i replace all market condition with my own script, said market condition no longer exsists....
                    -SOLLUTIONS?
                        1) make it so i can detect when the 'invisable' market condition is set right, but making them all extend a class that only does that.
                           if set up to be automatic, would let other people support this mod with litterly no issue on my end, and little on there own.. yes that sohuld work
                        2) no, it will be fine. the hazzard rating is not linked to the original market condition, so it should be good out there.
                        3) the only way i see that could do this is to -remove- all the 'base' market conditions. or alturnitvely, keep them, but set them to be invisable when not in play, in addition to countering there modifers when they are not inplay?
                    -NOTE:
                        apply and un apply run constantly in market conditions. just so you know.
            all other modifiers seem to be stored in the '\data\campaign\market_conditions.csv'
                -this looks almost easy to override...
                IDEA:
                    1) replace everything in '\data\campaign\market_conditions.csv' with my own code that will act as a 'shell' of the normal code..
                    2) add a new class in 'condition replacer' that acts as the 'filling' of a given market condition...
                    3) set that 'condition replacer' to have the same functions as all the classes it replaced.
    3)(functional) supply demand library
        -allows the mass or pacific changing of supply or demand on a industry
        issues:
            might possibly not effect the cargo supply fleets carry to and from the market? need to check that because i might be wrong.
    4) growth changer
        -allows one to remove or add new growth from outside of conditions or industry
    5) hazard changer
        -allows for changing in the hazard button name, description, looks, and function.
    6) free port changer
        -allows the change in the free-port name, and description.
    7)(done) custom market founder
